{"ast":null,"code":"var _jsxFileName = \"/home/ajaykumar/Desktop/OFFICE/new-project/src/Banner Image /image-banner.jsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BannerImage = ({\n  src,\n  alt,\n  style,\n  aspectRatio,\n  isMobile\n}) => {\n  const containerStyle = {\n    position: 'relative',\n    overflow: 'hidden',\n    ...style\n  };\n  const imageStyle = {\n    width: '100%',\n    height: '100vh',\n    maxHeight: '1089px',\n    objectFit: 'cover',\n    display: 'block'\n  };\n\n  // Default aspect ratios\n  const defaultAspectRatio = {\n    desktop: '16:9',\n    mobile: '4:3'\n  };\n  let aspectRatioText = \"\";\n  if (aspectRatio && isMobile !== undefined) {\n    const {\n      desktop = defaultAspectRatio.desktop,\n      mobile = defaultAspectRatio.mobile\n    } = aspectRatio;\n    const setAspect = ratio => {\n      const [width, height] = ratio.split(':').map(parseFloat);\n      if (!isNaN(width) && !isNaN(height)) {\n        aspectRatioText = `${width}:${height}`;\n      }\n    };\n    if (isMobile) {\n      setAspect(mobile);\n    } else {\n      setAspect(desktop);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: containerStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: src,\n      alt: alt,\n      style: imageStyle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        position: \"absolute\",\n        bottom: \"5px\",\n        right: \"5px\",\n        color: \"white\",\n        background: \"rgba(0, 0, 0, 0.5)\",\n        padding: \"5px\",\n        borderRadius: \"5px\"\n      },\n      children: aspectRatioText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_c = BannerImage;\nexport default BannerImage;\nvar _c;\n$RefreshReg$(_c, \"BannerImage\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","BannerImage","src","alt","style","aspectRatio","isMobile","containerStyle","position","overflow","imageStyle","width","height","maxHeight","objectFit","display","defaultAspectRatio","desktop","mobile","aspectRatioText","undefined","setAspect","ratio","split","map","parseFloat","isNaN","children","fileName","_jsxFileName","lineNumber","columnNumber","bottom","right","color","background","padding","borderRadius","_c","$RefreshReg$"],"sources":["/home/ajaykumar/Desktop/OFFICE/new-project/src/Banner Image /image-banner.jsx"],"sourcesContent":["import React from \"react\";\n\nconst BannerImage = ({ src, alt, style, aspectRatio, isMobile }) => {\n  const containerStyle = {\n    position: 'relative',\n    overflow: 'hidden',\n    ...style\n  };\n\n  const imageStyle = {\n    width: '100%',\n    height: '100vh',\n    maxHeight: '1089px',\n    objectFit: 'cover',\n    display: 'block',\n  };\n\n  // Default aspect ratios\n  const defaultAspectRatio = {\n    desktop: '16:9',\n    mobile: '4:3'\n  };\n\n  let aspectRatioText = \"\";\n\n  if (aspectRatio && isMobile !== undefined) {\n    const { desktop = defaultAspectRatio.desktop, mobile = defaultAspectRatio.mobile } = aspectRatio;\n\n\n    const setAspect = (ratio) => {\n      const [width, height] = ratio.split(':').map(parseFloat);\n      if (!isNaN(width) && !isNaN(height)) {\n        aspectRatioText = `${width}:${height}`;\n      }\n    };\n\n    if (isMobile) {\n      setAspect(mobile);\n    } else {\n      setAspect(desktop);\n    }\n  }\n\n  return (\n    <div style={containerStyle}>\n      <img src={src} alt={alt} style={imageStyle} />\n      <p style={{ position: \"absolute\", bottom: \"5px\", right: \"5px\", color: \"white\", background: \"rgba(0, 0, 0, 0.5)\", padding: \"5px\", borderRadius: \"5px\" }}>{aspectRatioText}</p>\n    </div>\n  );\n};\n\nexport default BannerImage;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,WAAW,GAAGA,CAAC;EAAEC,GAAG;EAAEC,GAAG;EAAEC,KAAK;EAAEC,WAAW;EAAEC;AAAS,CAAC,KAAK;EAClE,MAAMC,cAAc,GAAG;IACrBC,QAAQ,EAAE,UAAU;IACpBC,QAAQ,EAAE,QAAQ;IAClB,GAAGL;EACL,CAAC;EAED,MAAMM,UAAU,GAAG;IACjBC,KAAK,EAAE,MAAM;IACbC,MAAM,EAAE,OAAO;IACfC,SAAS,EAAE,QAAQ;IACnBC,SAAS,EAAE,OAAO;IAClBC,OAAO,EAAE;EACX,CAAC;;EAED;EACA,MAAMC,kBAAkB,GAAG;IACzBC,OAAO,EAAE,MAAM;IACfC,MAAM,EAAE;EACV,CAAC;EAED,IAAIC,eAAe,GAAG,EAAE;EAExB,IAAId,WAAW,IAAIC,QAAQ,KAAKc,SAAS,EAAE;IACzC,MAAM;MAAEH,OAAO,GAAGD,kBAAkB,CAACC,OAAO;MAAEC,MAAM,GAAGF,kBAAkB,CAACE;IAAO,CAAC,GAAGb,WAAW;IAGhG,MAAMgB,SAAS,GAAIC,KAAK,IAAK;MAC3B,MAAM,CAACX,KAAK,EAAEC,MAAM,CAAC,GAAGU,KAAK,CAACC,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAACC,UAAU,CAAC;MACxD,IAAI,CAACC,KAAK,CAACf,KAAK,CAAC,IAAI,CAACe,KAAK,CAACd,MAAM,CAAC,EAAE;QACnCO,eAAe,GAAI,GAAER,KAAM,IAAGC,MAAO,EAAC;MACxC;IACF,CAAC;IAED,IAAIN,QAAQ,EAAE;MACZe,SAAS,CAACH,MAAM,CAAC;IACnB,CAAC,MAAM;MACLG,SAAS,CAACJ,OAAO,CAAC;IACpB;EACF;EAEA,oBACEjB,OAAA;IAAKI,KAAK,EAAEG,cAAe;IAAAoB,QAAA,gBACzB3B,OAAA;MAAKE,GAAG,EAAEA,GAAI;MAACC,GAAG,EAAEA,GAAI;MAACC,KAAK,EAAEM;IAAW;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC9C/B,OAAA;MAAGI,KAAK,EAAE;QAAEI,QAAQ,EAAE,UAAU;QAAEwB,MAAM,EAAE,KAAK;QAAEC,KAAK,EAAE,KAAK;QAAEC,KAAK,EAAE,OAAO;QAAEC,UAAU,EAAE,oBAAoB;QAAEC,OAAO,EAAE,KAAK;QAAEC,YAAY,EAAE;MAAM,CAAE;MAAAV,QAAA,EAAER;IAAe;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1K,CAAC;AAEV,CAAC;AAACO,EAAA,GA/CIrC,WAAW;AAiDjB,eAAeA,WAAW;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}