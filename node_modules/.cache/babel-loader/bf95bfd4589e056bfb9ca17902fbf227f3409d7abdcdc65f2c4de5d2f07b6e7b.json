{"ast":null,"code":"// import React, { useState, useEffect } from \"react\";\n// import { isBrowser } from \"browser-or-node\"; \n// import SvgWrapper from \"../global/svg-wrapper\";\n// import './sidebar.css'\n\n// function Sidebar(props) {\n//   const [activeChildIndex, setActiveChildIndex] = useState(null);\n//   const [showSidebar, setShowSidebar] = useState(false);\n//   const [showSidebarNav, setShowSidebarNav] = useState(true);\n//   const [scrollY, setScrollY] = useState(0); // To store scroll position\n\n//   useEffect(() => {\n//     console.log(\"mounted NavData\", props.context);\n//   }, []);\n\n//   useEffect(() => {\n//     // To stop document scroll when modal is active\n//     if (isBrowser) {\n//       if (showSidebar) {\n//         document.body.style.position = \"fixed\";\n//         document.body.style.top = `-${scrollY}px`;\n//       } else {\n//         const scrollY = document.body.style.top;\n//         document.body.style.position = \"\";\n//         document.body.style.top = \"\";\n//         window.scrollTo(0, parseInt(scrollY || \"0\") * -1);\n//       }\n//     }\n//   }, [showSidebar]);\n\n//   useEffect(() => {\n//     // Watch route changes\n//     const handleRouteChange = (to, from) => {\n//       if (to.path !== from.path) {\n//         closeSidebarNav();\n//       }\n//     };\n\n//     // Watch reset changes\n//     const handleResetChange = (newVal) => {\n//       if (newVal) {\n//         closeSidebarNav();\n//       }\n//     };\n\n//     return () => {\n//       // Cleanup\n//     };\n//   }, [props.$route, props.reset]);\n\n//   const toggleChild = (index) => {\n//     if (activeChildIndex === index) {\n//       setActiveChildIndex(null);\n//     } else {\n//       setActiveChildIndex(index);\n//     }\n//   };\n\n//   const isChildOpen = (index) => {\n//     return activeChildIndex === index;\n//   };\n\n//   const clearSearch = () => {\n//     // Code to clear search input value\n//   };\n\n//   const openSidebarNav = () => {\n//     setShowSidebar(true);\n//   };\n\n//   const closeSidebarNav = () => {\n//     setShowSidebar(false);\n//   };\n\n//   const redirectToMenu = (menu, level) => {\n//     // Code for redirection\n//   };\n\n//   const getNavigation = () => {\n//     return props.context?.navigation?.slice(0, props.maxMenuLenght);\n//   };\n\n//   const isDesktop = () => {\n//     return props.context?.navigation?.length > 0 && !props.isSidebarNav;\n//   };\n\n//   const getMenuOffset = () => {\n//     let val = props.global_config?.props?.menu_layout_desktop;\n\n//     return val === \"layout_1\" || val === \"layout_2\"\n//       ? \"padding-top: 20px\"\n//       : \"padding-top: 4px\";\n//   };\n\n//   return (\n//     <div className=\"font-body\">\n//       <div className=\"icon\">\n//         <SvgWrapper\n//           className=\"close-icon menu-icon\"\n//           src=\"close\"\n//           style={{ display: showSidebar ? \"block\" : \"none\" }}\n//           onClick={closeSidebarNav}\n//         />\n//         <SvgWrapper\n//           className=\"hamburger-icon menu-icon\"\n//           src=\"Menu\"\n//           onClick={openSidebarNav}\n//         />\n//       </div>\n//       <div\n//         className=\"sidebar\"\n//         style={{ display: showSidebar ? \"block\" : \"none\" }}\n//       >\n//         {/* Sidebar Content */}\n//         <div className=\"header-sidebar-navigation\">\n//           {/* Header Content */}\n//           <div className=\"search-bar\">\n//             {/* Search Bar Content */}\n//             <SvgWrapper className=\"search-icon\" src=\"white-search\" />\n//             <input\n//               className=\"search-input\"\n//               ref=\"searchInput\"\n//               type=\"text\"\n//               placeholder=\"What are looking for ?\"\n//             />\n//             <button className=\"clear-btn\" onClick={clearSearch}>\n//               Clear\n//             </button>\n//             <SvgWrapper\n//               className=\"close-icon svg-solid-border\"\n//               src=\"x-Menu\"\n//               onClick={closeSidebarNav}\n//             />\n//           </div>\n//           {/* Navigation Content */}\n//           <nav className=\"sidebar-navigation\">\n//             <ul key=\"l1_Nav\" className=\"l1_nav\">\n//               {getNavigation().map((nav, index) => (\n//                 <li className=\"l1_nav_border\" key={index}>\n//                   <div\n//                     className=\"label-with-icon\"\n//                     onClick={() => toggleChild(index)}\n//                   >\n//                     <p className=\"l1_label\">{nav.display}</p>\n//                     {nav.sub_navigation && nav.sub_navigation.length > 0 && (\n//                       <SvgWrapper\n//                         className=\"plus-icon svg-solid-border\"\n//                         src={\n//                           isChildOpen(index) ? \"minus-red\" : \"white-plus\"\n//                         }\n//                         onClick={() => toggleChild(index)}\n//                       />\n//                     )}\n//                   </div>\n//                   <ul\n//                     className=\"l2_nav\"\n//                     style={{ display: isChildOpen(index) ? \"block\" : \"none\" }}\n//                   >\n//                     {nav.sub_navigation &&\n//                       nav.sub_navigation.map((l2nav, l2index) => (\n//                         <li key={`l2_${l2index}`} className=\"l2_item\">\n//                           <p className=\"l2_label\">{l2nav.display}</p>\n//                         </li>\n//                       ))}\n//                   </ul>\n//                 </li>\n//               ))}\n//             </ul>\n//             {/* Sidebar Footer */}\n//             <div className=\"sidebar-footer\">\n//               <ul className=\"links\">\n//                 {/* Links Content */}\n//                 <li>\n//                   <SvgWrapper className=\"media-icons\" src=\"ICONS\" />\n//                   Find My Bike\n//                 </li>\n//                 {/* More li elements */}\n//               </ul>\n//               <ul className=\"social-icons\">\n//                 {/* Social Icons Content */}\n//                 <li>\n//                   <SvgWrapper className=\"social-icon\" src=\"facebook\" />\n//                 </li>\n//                 {/* More li elements */}\n//               </ul>\n//             </div>\n//           </nav>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default Sidebar;","map":{"version":3,"names":[],"sources":["/home/ajaykumar/Desktop/OFFICE/new-project/src/component/sidebar/sidebar.jsx"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\n// import { isBrowser } from \"browser-or-node\"; \n// import SvgWrapper from \"../global/svg-wrapper\";\n// import './sidebar.css'\n\n// function Sidebar(props) {\n//   const [activeChildIndex, setActiveChildIndex] = useState(null);\n//   const [showSidebar, setShowSidebar] = useState(false);\n//   const [showSidebarNav, setShowSidebarNav] = useState(true);\n//   const [scrollY, setScrollY] = useState(0); // To store scroll position\n\n//   useEffect(() => {\n//     console.log(\"mounted NavData\", props.context);\n//   }, []);\n\n//   useEffect(() => {\n//     // To stop document scroll when modal is active\n//     if (isBrowser) {\n//       if (showSidebar) {\n//         document.body.style.position = \"fixed\";\n//         document.body.style.top = `-${scrollY}px`;\n//       } else {\n//         const scrollY = document.body.style.top;\n//         document.body.style.position = \"\";\n//         document.body.style.top = \"\";\n//         window.scrollTo(0, parseInt(scrollY || \"0\") * -1);\n//       }\n//     }\n//   }, [showSidebar]);\n\n//   useEffect(() => {\n//     // Watch route changes\n//     const handleRouteChange = (to, from) => {\n//       if (to.path !== from.path) {\n//         closeSidebarNav();\n//       }\n//     };\n\n//     // Watch reset changes\n//     const handleResetChange = (newVal) => {\n//       if (newVal) {\n//         closeSidebarNav();\n//       }\n//     };\n\n//     return () => {\n//       // Cleanup\n//     };\n//   }, [props.$route, props.reset]);\n\n//   const toggleChild = (index) => {\n//     if (activeChildIndex === index) {\n//       setActiveChildIndex(null);\n//     } else {\n//       setActiveChildIndex(index);\n//     }\n//   };\n\n//   const isChildOpen = (index) => {\n//     return activeChildIndex === index;\n//   };\n\n//   const clearSearch = () => {\n//     // Code to clear search input value\n//   };\n\n//   const openSidebarNav = () => {\n//     setShowSidebar(true);\n//   };\n\n//   const closeSidebarNav = () => {\n//     setShowSidebar(false);\n//   };\n\n//   const redirectToMenu = (menu, level) => {\n//     // Code for redirection\n//   };\n\n//   const getNavigation = () => {\n//     return props.context?.navigation?.slice(0, props.maxMenuLenght);\n//   };\n\n//   const isDesktop = () => {\n//     return props.context?.navigation?.length > 0 && !props.isSidebarNav;\n//   };\n\n//   const getMenuOffset = () => {\n//     let val = props.global_config?.props?.menu_layout_desktop;\n\n//     return val === \"layout_1\" || val === \"layout_2\"\n//       ? \"padding-top: 20px\"\n//       : \"padding-top: 4px\";\n//   };\n\n//   return (\n//     <div className=\"font-body\">\n//       <div className=\"icon\">\n//         <SvgWrapper\n//           className=\"close-icon menu-icon\"\n//           src=\"close\"\n//           style={{ display: showSidebar ? \"block\" : \"none\" }}\n//           onClick={closeSidebarNav}\n//         />\n//         <SvgWrapper\n//           className=\"hamburger-icon menu-icon\"\n//           src=\"Menu\"\n//           onClick={openSidebarNav}\n//         />\n//       </div>\n//       <div\n//         className=\"sidebar\"\n//         style={{ display: showSidebar ? \"block\" : \"none\" }}\n//       >\n//         {/* Sidebar Content */}\n//         <div className=\"header-sidebar-navigation\">\n//           {/* Header Content */}\n//           <div className=\"search-bar\">\n//             {/* Search Bar Content */}\n//             <SvgWrapper className=\"search-icon\" src=\"white-search\" />\n//             <input\n//               className=\"search-input\"\n//               ref=\"searchInput\"\n//               type=\"text\"\n//               placeholder=\"What are looking for ?\"\n//             />\n//             <button className=\"clear-btn\" onClick={clearSearch}>\n//               Clear\n//             </button>\n//             <SvgWrapper\n//               className=\"close-icon svg-solid-border\"\n//               src=\"x-Menu\"\n//               onClick={closeSidebarNav}\n//             />\n//           </div>\n//           {/* Navigation Content */}\n//           <nav className=\"sidebar-navigation\">\n//             <ul key=\"l1_Nav\" className=\"l1_nav\">\n//               {getNavigation().map((nav, index) => (\n//                 <li className=\"l1_nav_border\" key={index}>\n//                   <div\n//                     className=\"label-with-icon\"\n//                     onClick={() => toggleChild(index)}\n//                   >\n//                     <p className=\"l1_label\">{nav.display}</p>\n//                     {nav.sub_navigation && nav.sub_navigation.length > 0 && (\n//                       <SvgWrapper\n//                         className=\"plus-icon svg-solid-border\"\n//                         src={\n//                           isChildOpen(index) ? \"minus-red\" : \"white-plus\"\n//                         }\n//                         onClick={() => toggleChild(index)}\n//                       />\n//                     )}\n//                   </div>\n//                   <ul\n//                     className=\"l2_nav\"\n//                     style={{ display: isChildOpen(index) ? \"block\" : \"none\" }}\n//                   >\n//                     {nav.sub_navigation &&\n//                       nav.sub_navigation.map((l2nav, l2index) => (\n//                         <li key={`l2_${l2index}`} className=\"l2_item\">\n//                           <p className=\"l2_label\">{l2nav.display}</p>\n//                         </li>\n//                       ))}\n//                   </ul>\n//                 </li>\n//               ))}\n//             </ul>\n//             {/* Sidebar Footer */}\n//             <div className=\"sidebar-footer\">\n//               <ul className=\"links\">\n//                 {/* Links Content */}\n//                 <li>\n//                   <SvgWrapper className=\"media-icons\" src=\"ICONS\" />\n//                   Find My Bike\n//                 </li>\n//                 {/* More li elements */}\n//               </ul>\n//               <ul className=\"social-icons\">\n//                 {/* Social Icons Content */}\n//                 <li>\n//                   <SvgWrapper className=\"social-icon\" src=\"facebook\" />\n//                 </li>\n//                 {/* More li elements */}\n//               </ul>\n//             </div>\n//           </nav>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default Sidebar;\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}